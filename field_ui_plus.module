<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function field_ui_plus_form_field_ui_field_overview_form_alter(&$form, &$form_state) {
  // Obtain the field instances for the entity examined here, and then loop
  // through to obtain the extra data to be added.
  // e.g. #entity_type = 'node', #bundle = 'page'
  $instances = field_info_instances($form['#entity_type'], $form['#bundle']);
  $fields = field_info_fields();
  foreach ($instances as $field_name => $instance) {
    // Obtain the data to be added.
    $data = module_invoke_all('field_ui_plus_instance_data', $instance);
    // Allow an opportunity to alter that data.
    drupal_alter('field_ui_plus', $data);

    // Replace the label markup in its cell with the themed data.
    $form['fields'][$field_name]['label']['#markup'] = theme(
      'field_ui_plus_instance_data',
      array(
        'label' => $form['fields'][$field_name]['label']['#markup'],
        'data' => $data,
      )
    );
  }

  // Lastly, don't forget the CSS used to style the additions.
  $path = drupal_get_path('module', 'field_ui_plus') . '/field_ui_plus.css';
  $form['#attached']['css'][] = $path;
}

/**
 * Implements hook_theme().
 */
function field_ui_plus_theme() {
  $items = array();
  $items['field_ui_plus_instance_data'] = array(
    'variables' => array(
      'label' => NULL,
      'data' => array(),
    ),
  );
  return $items;
}

/**
 * Theme the information for a given instance.
 */
function theme_field_ui_plus_instance_data($variables) {
  $output = '<div class="field-ui-plus-wrapper">';
  $output .= '<div class="field-ui-plus-label">' . $variables['label'] . '</div>';
  $output .= '<div class="field-ui-plus-data">';

  $output .= drupal_render($variables['data']);

  $output .= '</div>';
  $output .= '</div>';
  return $output;
}

/**
 * Implements hook_field_ui_plus().
 */
function field_ui_plus_field_ui_plus_instance_data($instance) {
  $data = array();

  $widget_type = isset($instance['widget']['type']) ? $instance['widget']['type'] : NULL;

  // Is this field instance required?
  if (!empty($instance['required'])) {
    $data['required'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => t('Required'),
      '#attributes' => array(
        'class' => array('field-ui-plus-data-required'),
      ),
      '#weight' => 0,
    );
  }

  // Number of rows for textareas.
  if (in_array($widget_type, array('text_textarea', 'text_textarea_with_summary'))) {
    $data['textarea_rows'] = array(
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#value' => t('Rows: @rows', array(
        '@rows' => $instance['widget']['settings']['rows'],
      )),
      '#attributes' => array(
        'class' => array('field-ui-plus-data-textarea-rows'),
      ),
      '#weight' => 10,
    );
  }

  // Node reference allowed content types
  if (module_exists('node_reference')) {
    if(
      isset($instance['display']['default']['type'])
      && $instance['display']['default']['type'] == 'node_reference_default'
    ) {
      $data['referenced_types'] = array(
        '#type' => 'html_tag',
        '#tag' => 'div',
        '#value' => t('Referenced Types: @types', array(
          '@types' => implode(", ", array_filter($field['settings']['referenceable_types']))
        )),
        '#attributes' => array(
          'class' => array('field-ui-plus-data-referenced-types'),
        ),
        '#weight' => 20,
      );
    }
  }

  return $data;
}

